<div id="app">
    <div class="add-task-button">
        <div class="add-task-button-text">
            Добавить задачу
        </div>

    </div>

    <div class="table-docs-block">

        <span v-if="isDocumentsLoading" class="loader"></span>

        <div display v-show="!isDocumentsLoading" class="table-docs-list">

            <div class="doc-item" v-for="doc in documents">

                <div class="doc-id">
                    Номер документа:{{doc.id}}
                </div>

                <div class="doc-status">
                    Статус:{{doc.status}}
                </div>

                <div class="doc-tasks-block">

                    <div class="doc-tasks-title">
                        Задачи
                    </div>

                    <div class="tasks-container">

                        <div class="doc-tasks" v-if="doc.activeTask != null">

                            <div class="task-id">
                                Номер задачи:{{doc.activeTask.id}}
                            </div>

                            <div class="task-name">
                                Название:{{doc.activeTask.name}}
                            </div>

                        </div>

                        <div class="doc-tasks" v-for="task in doc.tasks">

                            <div class="task-id">
                                Номер задачи:{{task.id}}
                            </div>

                            <div class="task-name">
                                Название:{{task.name}}
                            </div>

                        </div>

                    </div>
                </div>

            </div>

        </div>



    </div>
</div>

<style>

    body {
        margin: 0px;
    }

    .add-task-button {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        position: absolute;
        background-color: grey;
        height: 150px;
        width: 150px;
        border-radius: 100px;
        bottom: 10px;
        right: 10px;
    }

    .add-task-button-text {
        text-align: center;
    }

    .table-docs-block {
        width: 100%;
        height: 100%;
        display:flex;
        flex-direction:column;
        align-items:center;
        justify-content:center;
    }

    .table-docs-list {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        width: 100%;
        height: 100%;
    }

    .doc-item {
        width: 100%;
        display: grid;
        grid-template-columns: 1fr 1fr 4fr;
    }

    .doc-tasks-block {
        display: flex;
        flex-direction: column;
    }

    .tasks-container {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }

    .loader {
        width: 48px;
        height: 48px;
        border: 5px solid;
        border-color: #FF3D00 transparent;
        border-radius: 50%;
        display: inline-block;
        box-sizing: border-box;
        animation: rotation 1s linear infinite;
    }

    @@keyframes rotation {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
    const Application = {
        data() {
            return {
                documents: [],
                isDocumentsLoading : true
            }
        },

        mounted() {

            this.GetAllDocuments();
        },

        methods: {

            async GetAllDocuments() {

                this.isDocumentsLoading = true;

                await axios.get("api/documents")
                    .then(response => {
                        this.documents = response.data;

                        this.isDocumentsLoading = false;
                    })
            },


            async DeleteDocument(docId) {
                if (confirm("Вы действительно хотите удалить документ?")) {

                    await axios.delete("api/documents/" + docId)
                        .then(response => {
                            alert(response.data);
                        })
                }
            }

        }
    };

    Vue.createApp(Application).mount('#app');
</script>


